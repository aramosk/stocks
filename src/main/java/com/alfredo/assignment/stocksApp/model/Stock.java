package com.alfredo.assignment.stocksApp.model;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.hibernate.validator.constraints.NotBlank;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import javax.persistence.*;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.NotNull;
import java.math.BigDecimal;
import java.util.Date;

/**
 * Entity class for Stock.
 *
 * @author aramosk
 */
@Entity
@EntityListeners(AuditingEntityListener.class)
@Getter
@Setter
@NoArgsConstructor
public class Stock {

    @Id
    @GeneratedValue
    private Long id;

    @NotBlank
    private String name;

    @Column(nullable = false, name = "currentprice")
    @DecimalMin(value = "0.00")
    @NotNull
    private BigDecimal currentPrice;

    @Column(nullable = false, name = "lastupdate")
    @Temporal(TemporalType.TIMESTAMP)
    @LastModifiedDate
    private Date lastUpdate;

    //Constructors

    public Stock(String name, BigDecimal currentPrice) {
        super();
        this.name = name;
        this.currentPrice = currentPrice;
    }

    //Getters and setters automatically generated by lombok

    @Override
    public String toString() {
        return new StringBuilder("Stock{")
                .append("id=").append(id)
                .append(", name='").append(name)
                .append(", currentPrice=").append(currentPrice)
                .append(", lastUpdate=").append(lastUpdate)
                .append('}').toString();
    }
}
